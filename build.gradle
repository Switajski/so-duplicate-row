plugins {
  id 'org.springframework.boot' version '3.1.2'
  id 'io.spring.dependency-management' version '1.1.2'
  id 'java'
  id 'idea'
  id "org.sonarqube" version "3.0"
  id "com.github.ben-manes.versions" version "0.27.0"
  id "org.flywaydb.flyway" version "9.16.3" // must match the flyway version used by spring boot
}

group 'com.demo'
version '1.0.0-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
  maven { url 'https://jitpack.io' /* to use github releases as dependencies */}
}

sonarqube {
  properties {
    property "sonar.projectName", "Demo"
  }
}

configurations.configureEach {
	exclude group: "commons-logging", module: "commons-logging"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-json'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'


	implementation 'org.flywaydb:flyway-core'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	implementation("com.google.guava:guava:31.1-jre")

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly('org.projectlombok:lombok')
	testAnnotationProcessor('org.projectlombok:lombok')

	annotationProcessor 'org.hibernate.orm:hibernate-jpamodelgen'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	maxHeapSize = "1024m"
	useJUnitPlatform()
}

bootRun {
	// load resources from /src instead of /build (e.g. for email templates during development)
	sourceResources sourceSets.main
}
